Beego Framework Tutorials - 2 - Routing Namespace (part 3 of 3)
A Go HTTP framework for developing HTTP application rapidly

By Lei Cao
http://github.com/lei-cao

* Content
- `namespace` in routing system
- How to plan and organize routers

* namespace
The namespace is inspired by sintra and laravel

	ns := beego.NewNamespace("/v1").
		Cond(func(ctx *context.Context) bool {
		return true
	}).
		Filter("before", auth).
		Get("/fixed", func(ctx *context.Context) {
		ctx.WriteString("/v1/fixed")
	})

	beego.AddNamespace(ns)

* namespace API

- NewNamespace(prefix string)

	Create a `namespace` object

- namespace contains these methods:

- Cond(cond namespaceCond)  

	Set up the `Condition`, if the conditions are satisfied then process the namespace
	
- Filter(action string, filter FilterFunc)

	`action` decide when to run the filter, it can be 'before' or 'after'

* namespace API
		
- AutoRouter(c ControllerInterface)
- AutoPrefix(prefix string, c ControllerInterface)
- Get(rootpath string, f FilterFunc)
- Post(rootpath string, f FilterFunc)
- Delete(rootpath string, f FilterFunc)
- Put(rootpath string, f FilterFunc)
- Head(rootpath string, f FilterFunc)
- Options(rootpath string, f FilterFunc)
- Patch(rootpath string, f FilterFunc)
- Any(rootpath string, f FilterFunc)
- Router(rootpath string, c ControllerInterface, mappingMethods ...string)
- Handler(rootpath string, h http.Handler)

	All these functioins in normal router you can also use in `namespace`
	
* namespace API
Nested namespaces

- Namespace(ns *Namespace)

	ns := beego.NewNamespace("/v1").
		Namespace(
			beego.NewNamespace("/shop").
				Get("/:id", func(ctx *context.Context) {
					ctx.Output.Body([]byte("shopinfo"))
			}),
			beego.NewNamespace("/order").
				Get("/:id", func(ctx *context.Context) {
					ctx.Output.Body([]byte("orderinfo"))
			}),
			beego.NewNamespace("/crm").
				Get("/:id", func(ctx *context.Context) {
					ctx.Output.Body([]byte("crminfo"))
			}),
		)
* Organizing project's routing
- For small project can just set routers in `routers/router.go`
- For multi-modules big project, use `namespace` and register the router while importing the module

	beego.AddNamespce(ns)
	
	|-- beeapi
	|-- conf
	|   `-- app.conf
	|-- controllers
	|   `-- default.go
	|-- main.go
	|-- models
	|   `-- object.go
	|-- routers
	|   `-- router.go
	`-- tests
	    `-- default_test.go	
		