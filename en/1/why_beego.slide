The Zen of Beego
A Go framework for developing HTTP application rapidly
20:00 10 May 2014
Tags: beego

Lei Cao
http://github.com/lei-cao

* Content
- Why do we design beego?
- What can beego do?
- Where will beego go?
- How to install and config beego?
- When should I start learning beego? Now!

* Why do we design beego?

1. Astaxie want to create a framework while he was writing his book.

.link https://github.com/astaxie/build-web-application-with-golang Build Web Application with Golang

2. It is inspired by tornado, sinatra and flask.


* What can beego do?

beego is a http application framework

Why it's called http framework other than web framework?

The reason is beego suits for any kinds of http services: api services, web backend, game development etc.

* beego's Key Features

- High performance. The fastest Go framework out there now.
- Rapid development, lots of components, highly decoupled
- Tons of products. 360，weico，jd，opera ...
- RESTful model with customizable actions
- high stability, frequent update, continuous maintainace
- Good documents, online FAQ

* Where will beego go?

- Highly modular. Improving existent modules and developing more new modules
- Light core framework. beego is formed by many modules now. Will make it even lighter. Any part of MVC can be replaced.
- Enhance routing. Compating with other framework's service. For example you can create a module in Martini and call it in beego.
- Enhance bee tool. Automating the development even more.

* How to install and config beego?

beego is the framework, bee is the developing tool.

	go get github.com/astaxie/beego
	go get github.com/beego/bee

* Frequently happened problems:
- Setting up GOPATH
- Setting up bee tool
- git is not installed

* Testing if installed sucessfully
Type bee in command line

* When should I start learning beego? Now!

	bee new beegoProject
	

	bee run watchall	
	
* Directory explication

	.
	|-- conf
	|   `-- app.conf
	|-- controllers
	|   `-- default.go
	|-- main.go
	|-- models
	|-- routers
	|   `-- router.go
	|-- static
	|   |-- css
	|   |-- img
	|   `-- js
	|-- tests
	|   `-- default_test.go
	`-- views
	    `-- index.tpl